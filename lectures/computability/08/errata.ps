%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: errata.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR17 CMR12 CMR10 CMBX10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -G0 -o errata.ps errata
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.01.27:1542
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 4, 04/05/10
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
  z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def /x x Coef mul def /y1 y1 Coef mul def /x1 x1 Coef mul def
  x1 0 gt y1 0 gt x 0 gt y 0 gt and { [ y x y1 x1 ] 1 a sub y mul}
  { [ 1 0] 0 } ifelse setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
    n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA62096FE53B3181F1
34B6A0FC125B7E8B4447C8A5E11A7F414CE043ABAA584B2F67DE3FE1325334CB
63B98D4A88F8D5306D7EA98B62723EA709806FC982EDF78271ED4545B07C4617
EFA1A50D7E2D02E904EB093B5745BDF79F8143589E6296BF025CBC11411F348C
E687D0E97CF4FA509B30E1E82D6E03DA737F760525DAC028AD08B70B6F14750E
FC9EE46958A6FE7EC484B84DD4DDD8BF2C4162E29745A69E7717731DC3556B48
BF53EDCE1499F3925DACEC43096E1743E2EC204EA0883B4272A2E6FFFE12A187
49602C5F4EFEC4C0CBE41CAE0129E9F3CB9D1D32F10FC1198E32511F945E1172
87AD86E517267E421D345D782334244B767EB7651FF0B70681E8AFCB58655A8E
02FA0753A44EC9E581AE3691C027FB01BEDE9F738284B246BE4FA7493A92539F
FE7664A8A8D9BF3903299A0C81E94A8380D89096E480D7B112A801A369534D3C
3A0CC1CFCF4A01F9BEFA8EB263C089CE1074CC656155ED2C2E95398C0BE9BC7D
C784E4ACBC3A4A0B6E6454DD3107E2BFDFA2EBC7A3E2A78C8927F24C016C102C
FA346BF944CBBB0E7BABC0413F678204811AFB3C12D7E0B65E32A8EEA690C33C
850A8BC6988EC47457B2253F632FE978DDAF5E0A70C2137B983B1A5F867C0C10
36B2DD83C5BB5CC6161D7722B3ECAD7CACA869C48B50DDF960297D39DF2B708B
EF605075EE157E6B6AEEC9D5B0D1C9641E59CE041594E0396A0BE4B3AED032D7
FC1564C2A4E47DE0CA1168AD094354299D29BCEE77EF87B8A5D2E790172D4585
FBDFDA6D354A2C2F26AD15E7D2D2603D8EEED671C64AB5C4C686D00E8D7AC674
7485C167344090E121BEFE8C3E172AA8D6F62578515EC78E18B045F400D54B00
0D430635FA186E0CF93660BDBB489FB5C5BFD22467E3B7B7EFD4831B58CDCD36
66FA965479B2A5F85AFA549BEE2DD7205485566D9C91443BAFAFED61F717409A
F379E2B400E56A7455A38C713629B68F15B21ECD20D872D275CEB6B20D783D56
E2A90DB7E59E50D22252F983E739199791F703E1A7715DA56768569FA888FF30
AAA07C0CAAA57932CCE22798816FAC800F990EF090FD7E9885CC6B050715AF08
BC9FBE6FE358C1B10576E7EB96907824B42289A545F3AC0F4EF1A383E0B972E9
3826FCE96B0452CC374F4FB8F2A9EFEB4681F913B8BC9DC0A7E85B4BE47ABEB2
8963120B2ED33B200AE21D0404DCF32BCB28A7373F882020CB43F3BD83B2EB3B
CB16D6423550A709D944B39CC9B68D89603BDD07F66F4BB96933058EBAD18508
FA7D2348C4A58155CEF57B064583D6F8CD88CF0452560B9FBDA81903C323B06C
626361222EF650766432CEC4291D0239122D50E3B5E2C1370BA3E42DC58E5D77
D861DFBEA8F505058D1DD7044A35479F35C3C02AC25007D2DAEB0D17245F1AE7
4E16068F74D8997E168ECDEAD92856E9B3CC15DDB5D1AF67DC2821E63F55A71A
6089E98A2272019560A431EAF029DEF9DE46F532948EA42F83B5D760434DCA56
AC1515D401B12C01501C3DA2D9090634547DE48EEF6DD9EC4DAA77AAF7A3C217
CD5C310BA0D369B7AA9804C0722671C51F01A54DF11FFFD1E106213ED41D1989
838F0A95B058C64B71A30353882D3ECD9A614B18496849359C935AB0D531D038
CA3E8DBDC44EFBA00F8B6CBDF1980D9BC7950E61EE8EF3DF16CC107794D71B4C
EDEF3212DFA1BF07B694DC5AFB67732D0E35E32B13972A1F84805BB804D0F32D
7920138F42BB4F36E2D1B898952ACA9A7CFE4720DF6E4DA6E1A327DCFB40B493
9AC6AC1BAB2A96B897FCC91B6A6C271967081D70E09B987C1B9F931F988B6E0A
FFB9D066C2DD13D947B128F7C0FEB738A179A355A7A5FF63732CAC1ECE4A6FB9
167136C84176D1E4223C3265D5D12BBDAA6FE8730E77609FAC9DCF66CF8A41E6
79D428E5F990566AE36357DE3384211CA6B46D3A1A42FFDFC69CA39CC43C5BC6
31A6DB6703296F6AD39C7BB530E6A63FFC6A4315546DBA6DC94D70D06E759BBB
A6E6F4F150B850EE5F03EBC5FED9DA7EDFBC5389FB3A59938BB8ADD92127DE27
AE7C7AF147ED075FDA688C2B5873A2F0E8ECC192C63C5831DC600A289060BF64
52600925CD6610F8F20B78D67494DB9779DE6AF725565F8C5A07BDF5D4B87D56
09136B72844AA7F25F49456645013D57D8027657098AF89D26887F4C46BADCD1
C3E6A591FDD096D2CA08B3B5332CC041BB5A545A6DC8766FE9AA1B8FC4C185C0
FC38B310EC3DD748267317238FE3E9B0E481E8E7B96C1060D9394C58682B487D
1088E739EFCF7B885513413C427EBFE12C3499F50B99E9B0C7F0ECE65276FE25
6F6F45B4F01904DEDB2A8C72F0DEB453911235BEE6690076A82C15D40E3E3DE5
C40E40B057D946AAD26F21DFD8DE200FCB37C75EAE9E6DB2D7D5BD17B2C32FEB
7A80FB0AC612D1A574CAADC437ECB9B8D469C942BCDE95062B178C3270FBDF6A
AACF8D77F83AB0FC8755605D1E88FE67431E9CA54323B10D798D8DBE73916EDC
033759F62327AD66BD42B772EF5F431DD4173C94BBEBFD2283CC1640558BB65B
3B7DF8A21292B4B9D6A3FBF9C0E299309C6B0523E7991413BFDCB19E754C5620
6C845012D051A0874BBF3B2263D417B16B5B11EE32D481C465E3D59AF3B4BEB5
B3A58666BF39CD4182B27B7FAB178218C8C47DFD29B6659B334C4C40A351859A
96D0E46534508EA4ADC0BC5F7F6B14686F4A535374BFA9F475C9DA3174EE94E6
96648CB6FF3140871262BB2F209AA20972313D7F342A8C695ED1172F1E2B85C6
CEB9744600184EC1B30B50B11E9705F26CBF9C383436EC73B10382448496805B
02065D5E867617E7418505DE0C24DBDC12EFEEAD6E8116AA156F7240E336FB06
F90D14EEFB4AABBE24642C489239619BD663709F98B89C9E690E4574BCDFA71D
0970AC4E544863B56CE8A6B0F64B7DDEA145096A85DDAE7BEB7D682C00D73061
66D48B31272B77B367102E49A06F0ED4D92A27E82059B5F7D00E20395DEEE67A
7021FB9FB58990FBB2B86F01E89A8AC953AB92FECCC8E974DFB403BB4ABB2D72
9468F16274693347BF6CF01B8AF37B0F58C5435024182D7F0770D6640ACCA12C
E69E158F07806C1B867CB92E43345CC723D0CC29B82555F573291A5EFA33E523
DF64AAF751127E0B92BE70702BC745443FBA6FDF2B459D049BBE74C669A53ABB
255395AB2DFE1B7050F60F4200EECF21D75AEBE5B25DEAA7DE4631EE389D0B35
870346B0DF8D7700E733182CB22139635EBD3BF4710D540B60C5EA236F455575
19D3B513335503E1BFDF04A94E1C3BBC7E443C02AB27140691547BDCBC2775EB
D0857767E2A23D8B6775E762DE3BA3CD71A9203E05443E42F79D5D034021BBEB
FB0DBC6720A48C0E495AD8E4A0320EDF12681D3B93B0979B3A822847D944C69D
1EECB23A5680783AD333E92A985056BB0219B2058E33ADA575FBE6A33A017192
F7B25F9173D7FF1C4C121DC6F891DB67809BC5D038304B34463C0C11E5CB1EB6
1D3D1D7BEC4C9C5255505E1B56DE796FD1277D1AA526D95014693919312C349D
10237222C8FB0E412320ED9E9B75A5FE411CAFF5F8187C3E779B8447782752F4
997E947FD066B03432DFF13A114CBAB8018B2F14B9DDEC447C0DDD2D8E693686
05415D8EC7C109F92FDE3319CBE9BF32F588B00A83D61F2BB3A351AFE73EFB15
EFBB25E7BA8F65A3FD32A93A35615F4DD264A10108B35B3668B48EA6569689FF
E58E358BF9DF3E0EF67F17C3FAB26387996EB977B9019D81E3D4392D956BE39A
32128A48D2D81A79EBB2800633AB44F96E3C56A3282B8B3816FB42220ED423F0
401D67A38FA8485A010F41BC0EFE7F041510B934C9681CC2C2CDFE35BA5905EA
584211BF686D53EEB2A1297B6B01ABF481C509F77D3D7F3C1F26BB6B7C64FCB8
6B543935D58455F50AD46020D4EDBF242626346241526833616DF6F664E28A2C
6C4AB33BAA6D71D42AA34659796483366949B866F38B9ABEB00EBA227F1D1186
869BD51B8FB3F8F56F4C8AD93CA6116BF2E86246E675ED84E01535FFC1FC8D9E
B5CF5DBA6B47A1507C0C2DCA08374EB386CF1DE0F23BD4F13AC04561DE6160E0
6F0BAB9A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 65 /A put
dup 67 /C put
dup 72 /H put
dup 73 /I put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF51A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A79D33F09E0EB4
5AFFCAE374412DFF9E4AAE8A92C83A5A7C986024CE77206171EE61782A799889
654AE58EBA775DE905497C7CD0CF1764834C8E19FC6FEE6D0537761CDBE39D1E
C954B803C19DD4F5B58C4D2012E04E630CC7F5EC442E14391B45178DDA235B7A
07AB6EA762365D2B920DC304A252193F1D935ED5268A6AC194D2101A9497CF36
780916C17E86D2B97BBBFE571A3C0D59A976C72E9D95AA2B96376A3B83379B8B
8ACBACD4CBBB03EC5B28D8121A2675BFB1538011B31D5E979F33C17A5EBCA026
9A1FBC9AC4357371961E1B0479E752BE00737229BF70E7582358EBC0358DEB2D
9B369F5626E638A56EAA0490EEFAB6A5DF3208BF6B36B73927341D45ABF544C4
A9FE4E87F7FB6C514D23A7A4F543E717DDECF582DD36A45F922B9B19B61C92AC
98ED4CFB8AD3A77C06BC31BAAF6D14F525B0DD448091357F3087558677A7C3AF
68D6C014A8082BC720101AC99FA31FFA78B1ED7D2C9BBB3800D471BB00C70CFC
C2C4F00331D9D0A05500313958922CBCAFE732DCDF8F7BC7678DD223E590D5F2
6001B83978699B881FF83D151600E251F9DF7235D51E85A07627ED95279608A2
525FF5A02984624C21F595F9DDF52BA828C424B94677EA2E35AED029A5EF3D3C
9FCE2117994EA7644E9581EE1CA5152BDE77F81EA53301CF35FAE66F4D1AAE14
31E8D917E62C98DFB04BA11BC1AFA0D376854B10A7D8EF47B71BC734C9EC5616
6362646C21F0D24FF6B79AC874419DE4379E6794B83248EA6C137AD5C78A7AFE
F1F4D46AFB2299FE396A6FA245A0062B9893DE9B80BA43A96B2BAFC3B0048647
DD26E13D6CDDB49C4A6C135BE1C728FE2647C4DE49C7198C30994D145D9AA09C
109CC86A005A7F3AACE64BE6623CC31850450C24D93ADC8EF456CC395A412268
F83505EFC6DDF3DCE1F8B8C03E730F739778BDAEB04144268FBE78E4DD810217
BE88E27880F794CC51E9DBDF7520E3B70D656682CB9FD8CB297FDD2F246F064E
0E86148716055762A7708EB224C7D09E7FB648091E7241791C712672B24AB05C
BF45E93F5BA517BCD12B8D1C51FC10847CF2C0C4A2C074F36311FDC86B95B464
31734C770895B3BCA60AE48C2DC4BFED1CEA5AFD5984EA0812924AF1A0D335FF
9BBE08ADA368BB0C1611363257E7B759D16B1EFC22777ACD52203FA16C7C72CC
EAE9CD623EE920BE33876824A13F8337CEBFC6BC3E5C9A89CC22E78D4701484F
53D284D7B14A8E31C34F256DEF6942447EDCED8220DE3701F389A7F06E890F40
86A5857B7DD65949CB16FB5B647E3EDD4ECB30F4BFF16220E9B9D7BB18B2E556
541B6DECBCFFF32233DB4CF8502D3F8E6C13BD7B5BF4015E556C4DE0BAD937DA
E3337F9B303891FCC50AF15975D44BF8DE06F86B783E44CB3F47148831D591C3
D125563A52D4D7A788180DE7C86D62DC0203820AEA6AA179180B31543B0A23E1
4E68254A8A5E640CB6E53489381EA49B4BE331A5DD0BD607EDF23B89093C245B
9CC60F9605EBC41E2FF7D9329F4CE7857889E39EFCA4624F6E200B9B0E4A6ABA
6BE3A0285518B9405EE89568E0878237E5F8E34A26822C141915F653967B8428
C05C41F4228E8F1E7BB189D16092B4817160A5B04F32F5803CA607B412D80419
183AFE220CA7DA044207259D10E7782C6D9C1DF9937B2338AFB0382D4C5612C6
8C9C9604ECFA21F69EAEBFC801B5F3CFE9748EB2E6B124DC719DF1A18963AEED
84E3DBB37BFCC1C99019A273F744449C42049874E2E6B6BBE09CF84141DC6505
9CA28F716C41C82335C432B3D87EB2548EC6906F6EA7C67E67016A978F020A94
6BA3CCD990DFA8FB89E843A9C4D59B2B3839861B19295F36CBE893741D76FDB9
66EA500D6527EAA618C32DFF595515E7AD46701E02B85CA8246341A415FE494F
B39897CE3700A852D88CAAAD2A497F8958C54C9B39890A7F913A28F18BD2BCFB
090D63E8939C62A5A025AC9AB5279DA6D226B60FBF92E6AE1CD6C56655B2200E
895A3D9D1E3D776B6A1C9BFA875BA0AB75FDEF715DF4B15E8C1E557EB109298E
6E3DD76ABA78CBF807A1322502E851198BA9496C76769C81DF02A59601917C46
21D5CC1A9B613D1B9A8C928FFB7CB42AA8716C42258E87DAB6481280544B8A7B
2F3D3B36737B4CD57D4912915DD6ECF855DA96C1627B7A06B97AB961A05FC667
63393184A30C0152877C2275CC979DE86ED4F16296D006B6C83FD08904F70944
B76DEEC7E8E9B9D725AF828429449DF1824879083F89B05A69AE93EF2B090BBA
9B9B66D03EB6EE7BA7F10BA594041CB4105F24E834B973C756A5E6DC83B5EF87
7B0F79A0C5D597D4E954C90585B41F7A7CD12B75A7D016EC0E0E270190DA9473
5B51BB9100600222F7295B4EECF441B3CCD83772D6C149E9E8C2683E9DCE10D1
6CB89DA03304C8730577F0C7B0186F765A2008D3A2C82EB81E10F878E793C585
BC0804BA76D1DB7E79C2FB1B71F64D8656F9865FA470ABB126E8D1CE746E3686
C8DF5D7F88250661317A6F655FEE46EE623F470ABF5694080B36DA1150EBD67C
97D0B1A722FBAD98E198D77B417C8AEB22703150AFC237A6453C9354C392EB8E
F9505197F6C79E39601A4F44C2BC2AEF8DB160E451222EF50E756A504F8AA937
1E5915DDC2C352B289D71CFEB63D800E914D20F1FF1FB5A6615958DAE8A5E052
4575A40FDA85BF77BB5BBD584A647035BB744DBDF5BFFD9229CE1EA1F071E333
DD9A9884AED02606274C104E11AB1DEFEE4C48E7AEF37D51BEE558D97070E439
1B13999E9B0B73C02E0FB09E8AACEFC2EC7F72D35EB365A34A935C4E3BD561FD
E6BBF91C9C240514DA123C9F6BD143320BD294A3E2C509EE899BA6D00A2AC003
3399F246536AB52C8EAC1606906DAA6D9C5C9BAC22EA8D6183521705D8C59F1B
FBB8033B1B7762BA148A64D38BE4A313705B9852744709EFFC67D3F895073301
BB6470EED540252D09F2AB61AD73255F01F2A987A30D0D33E0E53E2F612E9716
B9D186BA5525B4E98B9A2BCF5A43336A5B581DE53DF45DCDC08D67F02222B69D
B2BC7634324237A3EE0C78C4A033C441DCD8EB644F3639E334F45A638863F717
B1ACFA385DBC09A8727D6C50EF12BC7CF4D98DE5D1658ECE3D689C79E98E4233
B6E081725EDCC4C721D02147B5827E0B2D30F317D5FF5088360B9D718833E544
8023A21E98A29596EAC8BE9DAD33734400D1286DC7600719D4E0E401D5EAAB54
91289B056B48648C757978A262EC2549B398D340E6C1A238F8F8B528BCE32472
FBDB05A62507DFDFE1BDAD45E22481844DA7FD7C80BBC3090B8737C2E627B6A5
6915D0D4671A7AC9DAED7A6947D083172200BA79C015B72EDC58D5B7DE8F3985
62E28F3B61E5B86FA00568239B3695BB07B4FFF7AECFA75C52E3834CD634D2E7
AE2C9075754EB4B26D71082BE00B534C9B6F628A28CFF003C3F59DB0869B5468
ACF1CC429BB10EB5906E5FEED9740849E2503A547A50930D84DA5DD6BC574CF3
E24E061EADFD0B0382E97A796F81AC7166343717B472E9BC862AC2323DD74CD6
B809933BBB72453B096C90E51374254D71E622EC4D51A48A388FE89157604908
9D8EF878C344BE8D1799B29CF4F66C7DA65167E0983C5A23BEE4660813E126C9
8C0F54734833D642789BC96879262D5AA8AC3ACF02B979F049C01299DEEEAB1D
E9CBD4F3853F3C48CD78E54C6E58364BDF2B94718509B4044A8BAD292EFC2E2D
83A40007B8260845CAD7A5A8D598C8A5037A60E006FBBB24A5E5A9E90E8E0AA3
788C9AE6938D879ACAC2286BD39F8D4C7EAA3769202557A29F411E34425387BF
8BD2DCE1195481B21E1B165716CD0E540E16932DAC7E18F3B7D9A6FD3C6E67A5
E827B3C54D6D2FC67BCC8AAA6F99B8A9D47CC215188DE8C2F08B7F5FAA221A8A
CE316F47E9511FCAB39592676349299A82D247852423AC75980A4F37EB3BF15F
8525DE2C87BE05DD00B7079D5EBEA7499373C1A4F4A66848534B69D99A9F95EA
453C48D9381E57682E26D6696EC422D4668F5CAEF4EB0E6A502402ACBA77D700
DC121C4F59F97F4BD26757B4F2115279D2C45972723CBC2E10B5586626C1F8ED
3A19EEBA9553C560F43D43409FE2A12685349FF4644873FB84983D37CB84F527
252D5CB281E04EE0B84DF0382AFF16AD1D4DD79574A2801AABD1A6963EC95F49
860CDA661B25E8A3AFBEC5C48782201C0D09ABE48628E32E0E53BC0674A58AC0
B16D14E10408EC17B767D2950015F2AFAC0777C620CC86F727DE2EA331A966F6
35241F9B89CD552BD1E42C89910CF5D74145389C53E7CE99AC28376CA3FD7664
DD6AE13C29D48FDD8A4CB8C2414A63363FDD913B20E7CBF92B27C13D0678D88B
3F7C8C73EAE04635933111DB48550D4ABC8F0717EEB6439959C4C10D33368F7A
D989691654C2DFBDA81550CE5C031E0EAA2A4EB2DD842483D7D29B18AF7E2A18
2396D0004B0CB0EBCA1D8AFF37F2AC4AE338FD0A1050EFAA94A91DF027419D56
A0C0B2394FF117A6EF5D68EF4A252256B03BCE53DE17231AFBEBCF0F60CD8AC0
70342C46F09B5C8034F7B8BC1B2F71DEF6561CF8D66B1633023A1DB85586D5B9
078E1124B917B9DC17D0AEC1C8FB807C5622352318EB2F5E85DC0516C9132734
F2662F4FD5A9741E9A6211A73AE474930091DCD5BC96B8208178619E7FFE7F00
0A5A0F7AB671298DCE198C5074485DD3268B896DA091AC9E042A5A85E9F11403
0CBB8E008C1FABB737E2526CA4A0866439DD059FF47BDB5AABF78816E1889722
A052E32C4025B720763C0D053FEFF285A55110A65AB2C4643AE401CDB1328505
F431849081CE9E659F84B25F203E4F25B3C6FFCE39C05297D8AADE3D3F4A6A4E
2310D0805470D04B9D99019094DDC291D15FEAC4E5CE4A4AECC82789AF3E2FF2
F63C8A646C827E7E79BEDC8CC553C9310F2A0492FC191A4FE1D5B198C238251A
FA15F4553FFDA4E4F898A8F32532C6DF724C93AB4E101A12D89297990C5CD8A9
8FC47D832C735710C59D959F5487FB003844F9DF9E2EA9478CCD59CB37A7DC7D
06F06A0966A4AE90BB69C3D18A346B3B6C7F793CBD808105E2CF4854AA899E9D
DCC831EABBB813FD8F65B25305ECE7BE9AE62D324740C4132F40D476D9EF0A41
0008DC37B47D4B6E22B301D37C370FCFBC08A6CC62BB28B412637C6656FD8CC9
1F782EC5D2004F007A744831BA604BFAB0E82270B09FBA91B8F495C4DDF790A1
D5D3DCCC482D29A4D9F65CCD02DEB8AE7858D0908EF13639388F0F950C753E6C
A32D5E007BFDE412006D973CCAF6A2FDADBA913E1BC1919B4EAB683BA3B70CC3
309ECA281E2F08E0DB6ED12739849C6A35F28FFE34CCDE26E1E60C54CD5BD396
B2ECEFB6B470D9EE1E9F8D7243DC5BBFFDEF01E96C1ABF99357A43B8CFA90BAD
DC152C864D23555BDE9D943A19F715AE2D9DDB423AC0625D700162536BBDF3D5
F771153AAF9B03815DE10A0371DC5095EFE1A279B891D8C865DB210F25D080D8
F0ACD9E0D5A14FE56F76041B5CACAEAD33A25FFBC65D5C2CEF960C4F7E3E0775
A5CA63EF537A66BE7B21981A59720AD9C5BBECD245063F70B1AD14285D52DE84
D52A1794D08FCA522DFE951BA8BA3F5683E5D49C0EA97B31C6870DE8603376BB
95AE22AD9CCF3884CADF05D3FB303DD330582FDBB0269FE9560F778A23939569
B6CF794CA73A54AA01C26D8DEE55B3364734973488300D47704C5BAE5CBB74B8
6B33CFB0A3E4469F49827040D57439E32FB37778C2D8C6F6695ADF4EDB4D238B
8E1705FAB526C6B1CA6A40D5F60F7EC717C7FADC011B35C3E0E38E10F92DE315
97DD8B8414E50748F12DE3287683453FECA47897B85EE5D4F0409719F075CDD5
0D62294BC07FDD7F21038D12BC9B59CB773978F014F5847F38CF602F9951CAA5
D29C852685BA39091F40EA95EC00370B5BB6B7F42E61D0EFDE617D3279A41BAE
B2DEE6128926316E8B9ACAF511003E638BD3F98F8A835331EC0586713F1C91FE
7971EC7905C29CEDECF155751E129FD861631127B088D99265A8E85E97658F09
60280852CC46A12F6E55854B0C2E666397856692126D0473DF5BA018D99798B8
322F414BBA68635D1CF6ADDFF4E0FD1BE61FA5C12EA49BA8B38479DFA29EDC54
9BA080D9E829FED2FA9F7996C0C0E768AE063F412FD7AE3A18C32E1E76C029A7
A2639D5F991300118801AD9F49151E8356A47EE953919706FE8B15C2B201E114
9DDD3932511949F2514DB4EDBB14544D5E228CFE2067DEA82C1C6421064277E8
166E898380DAD0B92398DC716FF89BEF420D207872A90755593678ECC4CF7E90
2094F24ACAF29852B29DFE7D8BA6ABEE9CCB5514E8ACE454C7F098A6DB05A2E3
44232FEE9340E8E1C928649C34A47360575286AB8D160D7D89082D79B2EDCE64
CB037F5545F2E9014E2DAC81AA8D03FF98DD694C3038EB20ED9AD3C46AA2CB6A
C76FE08F23F488EEFC1B05EBA297EBC62B980AE85AE40AD9DF176D50317A8875
0D58719D1D8501B206A37A86B9FD14DD825B1459D9A98CCF15A7B5566E41C2F9
A11E9C3CBEE2465ACBD3792724ACCDC4CB642E5946503BC2D2AA11909CB73A14
C207E4B44CE6D26978C8AE4CE33D77E9AA23579BB39B62CE5E9CC6D9156B901A
BE0671A0CC11D10B3EBA23238FCC91439F6E472763F0F384587E02CB578AB3CD
6DA6006B89D6B0160598CB8056A97903A9D35C8BF73D5AB098F9765FBA8F36B5
6A6E0D8A1E4B16DF06A767FEF36433DC26BC79DC1A6FC9AC844130F7B3D5F992
C1C3057096D376AC99296B8444AAFDFD3BBFB9F08DC26B4A3BB55CD236D9C4E8
59FD223ECB8EFE191E1CE04224F5E4E1C64A54F3615EC09EA1A55F9A46049F79
6A06A36E0416CDC9FABD3C37F66E29020858A75C3C960724EE3516CA40F6A7D0
CE5688C071E40762C65A8B3A6539172E981495E2CF4ED55FE9DAA2C356F19F87
8B0D2D8FAD7D38FE98FFD03374C4B131E133954AC9C2961AC390502048D929E7
3EC7766D3D13BE00C0B0570B9F453D40D1F17968DCDC6A189C40F6E9027049D1
DBE4AD43A6AD8F3C5B3213F39ECBF0C047AE437B52E1ADC73A4D74D7B04CA6BB
24B6DE1B57A5B7E949190EF041F94B17D5B0A537F95E669A05B0875538E7A1FC
408EC65534AE6464B969F18181BC781C886761E0E5407B26D52FF56D8881DFFA
58F45AF9CC90D319253889F10890DE5B80006B2BCE5AC6B3B0104030F85D03BD
54CA4AF6BBF2340E13CEE923C69ED6B0371037D0BE322CB49C3B4F935234C864
0AF8ED8F65BB7FB9AB9258B2B398A085B3B5C7F6E649352294102A1CEDBFA99C
1F576201A0920659586BAE868C8ED1A242DA885580D7EC7665A08562AD4B3E3C
215DF953208D73F963707CB7434CB362BF4CC83F9EE9806A5E78533D6B960323
20D7AB03FDC53E271A02EFA152A554414E181526882F5A05FEE25F936A210E55
4AE29CA916CD3D7D4B7DC30335CBDCB56D2586B2229A156D1E5C1E78D5EEC3A5
EE93CE87FF487F6C7D0F92E01B631187A6CFF7D2DB5B2961224BA5A7BAE5B808
9C6650C788CFBBD4AEFD35414BC73493600B7C131396FE7433C90A446ACCDCAF
C07D243B020D49D3665F512E399657F0AC9FDD1E33B87185A635EE0B22B64812
C50D718A8B67DD8231F96B02B22E1D4FF2B03D63088568CF4B28C71C4B28E44D
621EEE6061CFAB514D02886273359C504CC28D31EF548130A1F9CC1E75D5839D
3C6DB35D93B9C1F983ADB1767F886FD82E6F2750D2B69301783BD1DFC5D7C47E
DB38C60F33E642A7A2182BE4A659ED64673338F94CB294519C5C0D59949F9DB3
C2177469F4EEEBE2BF0AB1973F6B5A4BFD4D02F0D9815FA3D81EFB932B80F169
D6267D7372B5E3522BD27D20F1480D7433698BBDD232B4783705982555577F09
A793B363BDCF80215B1848EAE2A82DFEB4E8B7257575A17CA12C5DA6601C38F0
29197C3958331100165E40191913C2A4C6C371B163480DFC721D516F5417DA88
979CD14187C602AB54400EF303304C13385C93FD6485E6ED2F8F487CDCE83183
FD728539A23B4C64F33F2A8ED50BBFF610A3B6B7B093681E3CCB367F0DBD96A4
70970A86CA252361F0719FEA94C1F3E5F670879E4C27C3DE28F6EDC0522C90E4
1CFA7417C5CA1A7341E45899D0410047B3A945F648C84C708BDDEA0CFA1EC472
15CDF5B893EC3C02F2E6596996AB978F536CB53C6AD816055C48FDAB5AD58A75
D4F951EC4058C1FD7CAF88C9AA282F681F073C1BA77B3AE21BEA8C8E8B933AB8
37A6E68FF4CE5927A1B6A7CF7358CB6EDFCE82925E4FBE1BC3F10A47AB1E09A9
F3C51E8E6D98393DD373B37C300A68E347C558C0C6E0D9C4021A0F7B1EFF40BB
7708EFDFDC8B8D5A4B8227A2BF6AE7339D9D7F09AA5CE2CDB5B480AEA2D35CBC
D05D89994F737DC797458A252E8D9B1C08FF46214D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 50 /two put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
dup 74 /J put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEB1855A22BB
7B0B138892F4D0C10FE8A534230DBE1A4336040EE007FFC5DBE0C38D2DC17C65
1D9CDB29875A20FEB0476BA0AB13A97FC456587D81CB3B552AE54AF6E24D2F38
5EBADB97DC33C9A84E91C53610B664A02A6BD3731D8391A841CDB0BEC8742A70
D40D7C8BB1E0DD3A12AFF78D5F57F9AB6DC0B6D33930A7C23A955EF0F1569C14
B878DEB03A9A6AF719C205F5A05592CE20DA403540D9B714461E781127280319
0F009B5693567CBEF73F3E5140CAF01EE2AA46765A264E028A0067928842AFC2
2251E88C9A7750CD021435AD4CD7231F97C8C27B3E84483253A3DD4D94F35DBE
5525312F6D753C81D2D822B364988376CE8027EF12F0453575AE9AE46296E139
25BACECA8B8808DA388222BA35B431F56BC3C349B8CA6D4AB83664A991FED514
78BFE25B1891685FA771885B44201180AE18F89470C4E9D567E2687616FE7D46
031138708B0A79E97503C44E5B560DEB4D08ECD8D7F2899FA56782E7407577F6
A998C294743789C4DED62D03F17B54B015EA46F50EE2E6B621444969B3E450A9
D9FCBC0CB53F5345057BC3723F2F419D1EA822854877130CACA69CF91DCE0790
708FB128C0F08F2596D78B459643F027F3A2DD3C4FA58C117E8C94E25AC2494B
2A23E1FF8616FCA80BC2BA604B9081ED6DE98C2AD9FBE110DCCC96C51FC4D820
EDD3197D62BBC8B0D1884968AA8C2D96C146313DA7F1F5A0A74A53D91FD7B167
664D86824E290044088C67E4A26C62DA57797B92E16C70FA492213321282F94F
B3EAC2AE402FC96A23A6E4F71C5E00F7057D0A1B7CF4446E71EAE273624A22DD
A6F2E20C9FD07FA0EACA7900F70B6E7F6B3811A3FA4454455D4123188E9480FB
DEA944D5267A2AA524EED389EB9389B1861A6B612F0AEFEBD8BB1AC37AF43CAF
729DAA6AE8C9A3E1BCB44F2FD04C55334E3C2F376A7FF33C8231B9BD513C0C47
D2EB62F951FB6FF0C3825268B47B950D6B2F9D30EA8BC6B80D26A31001D10498
A087D1E1B3AAA521636B4436B187B7F551D8855130C9BB7D21057BD7E583F077
3FF918D3E4411F69F201C1BAFF1D33303B2253445E239F71DDC0136AF99B1A0A
E607967BCD186278D203A961F8CD03FD73DF8CE3D748F72A686CDDF610C99667
BAAACFECD24550677C4C42A52460B6FC55F8E36540BFDA2AED486D9106C647A5
35817FDC376A6DF53EB1A925F89360C9E9D134073A9E1C228185C921DD1DEFE6
DF17DF0A77006A2B679B3E02965A5CDB6109D72F609FB4522F173E2C24141E1F
A1A486496792F980262B19E3BE4C532408CA5B12E020C9DEBBBD6B7F2ECC9852
E27EC60355DC85EC862DCAD32548205367DC3B33E55D2B3477C520C8F22AE438
2BC3AC522B4488A38AC55C8BF50EFE53FFB3156C3D2663CD975280ACE02A82F6
86619905F7B2DD9EAB9C8AC524821B5CCFE5622BC981CEEDA6A2E78815146CDD
52E3958FFFB7D9421DC628B0BBC46FBC783220B814BFE848927ED58E4A81882F
D0D2DCF3DE8ECE9663E5615464EBA86CB58123A0E977E72BE101E48E6E71DBD5
426FDEC493B56F5BFA6D82C87E509C158A0565925913E7915EE6D554AC25395D
682BA2C42B347A305DDA143A00DA58324551C5EF132B4E1B9062D79497AE3132
416B4D6C66C6C3B1BF5DAFBCFBC54B701F57D59EDBCBE3679685C5402822EA67
A45AE9699340470B4B3BC66A0C57A1F30882ABDF3038E699579F8263B9785676
4791CCC813DC5EC53227A1F2DB531F9FA60F0DC0FFEB5E73BD17EFC5B2DF84E7
BAEE8D10893B430CE3E0F9E09ADC77DC9E7EE7CE84DF44451BB87E53C5C0B8C9
B5E0B6E075D0F9B556D79EE3CFACC38B34DF5AC2B6BD9D750883B499FBF67DC1
7E4A38DF5D365B1F34E95669798A09D938B2D442754E01E8973E3174E0A98919
34E6B4C0BA5CCE743C47D85DE548C1142C467F285A7D501C2619FF2836D0C79F
188662A8699F823EBF11E8964C5C86DCD71D9AA7EED480ABC0CE55EB43EB562A
C37A7312297245DF316694850742C733B888C0D554EEE7ABC3AD484497282357
F5EFE6F728B4F149B3078E65D595EF09CB83A45ABDB1C04AD8317E758B81B411
5976AD0F815AC4ADACA23A18A8FBBD8F480BC328A43FE45B730DE2BBF66EFF59
11E70D0EA688EA379E32C15C29069797519C39D4AE34A90750D2499BD94EB9D7
5562276BA2BD48174491D60542CFF31BDAEC89839FBCB39BB107ABD747C7F00C
3A7FF6243EB5A2C7F755345DD6B4D732D960DE6A596F83B34F0B9FC777E02D69
DD3ECF993D26C06A3B5D11C3035E490D0845054793033A26E9B3AC48ED5AF82A
2ACFE53EB092A5FEE70E08BCF80A936DE8670756CD784E046553B7CEEE1E4D17
326061BB871A79FBD1EA865F3459604DA0FE66E02F3CF3FDF68870B60AC5AF2D
9839EE50FA8191B0095307040F9AB9E8BED0F3AF31DA5530CF5D02572816ED7B
3F66D8D53D8DD09A90D641ED0A0DE52057E7EC7A11D396AF0A209B2F836EDC52
599FB10EE2D94DB19D9E78946BC7DBF925266D8FBB003D121D4C52BC1224C850
9ADC7B9B4A198657DD974B4F164A95F0EBE0B1BAC44ADFF103B748FC2E91ED73
3ACD1B791268743D77C186A542C061ACB429D4C2B5CCE4C111474B5FE3C72A32
EB1FD11A0AA1906778BBDEAD69A779B7407730DF9C50D7F9319B118E3A07F910
52BD5D281185CCA4250DE10CB0BB9F220ACEBDC7ACB3743CBB919BC48E2C2106
8086D194F4264466F8309D7DD3311E34B0BA4C8AC6326F2899DE9611A513DC86
3653BA9852F1E799C67028BEA2F0A12473D236F620999D646E5E9183A91388DB
41378381787899CC4DFCBF1811AC786BE4A98C6EE887F7770D3D92EB01497C1B
CCAEABDA398C44EC417CB3BD310A44CDC628F33E693C1A3DE8FEAE9F7ED2A71E
12EF9618192BA95F15B5C0F94C7B40704837EC2C146582ACAE1F5F3F1578E3B6
673CE5AB7AD8D1203B149A2A1A214159E4D094615CE309C525FA89AE548EE9B9
83E1FB6632004C9E5514D646C590A8293545CF43E95FEF15C93F911B35FD84B0
DFBC52C612B84919D78E63F1927134F13D80710EB2DF0B92F5DC70D33A74EBCE
ED6052C239AC119DB783EABABA0D18DF5CF781AD708D56BCA5C2E7E1E8FF0637
A63AC5228B790F2F39EBFB1D4526A35D5456AF7771371F42F13ED9CCA2BB1D39
616190B60A8CD5BB652DD85F4B6D4C116570A342874052A58347BB509C1C6C16
4989B007DC401431BD67BDEA112DDE86D5F4201223925D517F0BDFDDC9B026DF
EEEB8877FFB9127A08BD86BF282F080B8B03CF2EEC997CEF0742C6C1B5A23FAA
3FD048F8B6E805C59D9FA6A2C2C5F70EB2A7281301D5DD2069B38439D5369C34
BB6A56F44FA87422A5EB400D2761AD51EF3D235FBEBE384B995DFC54F2FC7804
5DF59C31471A32A5FE0B35D82CD52C59E8BD5C6B2BDD5FA1276C5FF8E081A7B0
CEBC6691B44EEA63EE7119610E7652BFE1628F859099A0417B4304F50B6219CA
2CED1248CFFD491DD6064BCA1FD5565DA8FCA775CC7D3B3E5008C8B79A96E4B3
64F0C546AFAAA2DFE49A701C8E2BF4D08607FCE94A36D10FE08845CE537549C6
C51D8CECF878B151C731C717F5B5A62D0B7798D3EF9E4C53DAF9E7ADC3247210
1F797D1B4898E4A174D0AD1EE96B74EA5496C3CB75A0CB819668D05A80F290E1
25BB08FA8C3D705E14C454EDD6BE1947644FFC3641431E50FD8EB7F4E341B87F
1A98AD1F473AA03CCEC6A96AA732DCB6AAB6799E9DBD4B1C583D30D05F16668E
CCECD8FC04E5860582
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
dup 54 /six put
dup 56 /eight put
dup 67 /C put
dup 69 /E put
dup 76 /L put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B7A013114F2C
16D70B03969BF1101CE41F68E3A9F16AC50B66EF7602F478B3E7E08EF86ED39E
322743B3E6FC3A8141907D6EE854381FB84A187DF0E43FFA07F83B2CDC9ECEA5
0BE0631325E2007968130599B618C7E49590ABDD0AE357B1BAAA65D4F70D067A
D6708FB8298591D91E47F6BD3A7DF9B0577E3FDB99DDAC7BCD738676D6679CF3
2F71692896835091803D4633EFE178975DEA5AFB8F09CFBCD933979D70B8F969
D5DEF59FDBD8EA52D3EE9B5D6D40D189FEF209254A5AA65A0F2946CB4C916CE4
6FE7B230EC52B920D0A2183BF05A2E804839D59E24AE378FE811AA13622F7FF8
B2FAAB7BAEC3D9AD4C0468796BCB640D029B57581E1EBA8653D3E821FCE123D5
69406A26D1BBF1269C015B359F6C8DAC171E518D691EAB94911F631E730C0A2D
EF8BA51E2CD58661386083FF558D2650F2D6742790E75E576D25ECBC013478EB
5A36B8D761DF528EB76732404D0C45BB625D5DF8A1DD1521604B835BD25FAEFA
8467014F2D540517F6FCC1244455170F1040D648CDA9B4F0B6FE79511D0D5866
42989A0699DB3823E140DFCD58A8A72F07105C7C1575255F6A9FEEE9C7F5EC14
D40D4AF71CEA693EBFF3D946C33DB2AD142F83FA5031DC160B9800B712EB5C1C
23252C48D0F03F9E6CC8469350A8B078508586E3072A28B45815C6DFFF9739E7
23F6AC9351654572E001D16AE64EE098C226D3B71A418103E9EE7A011409F0DD
ED880BF0FF4E9E9E4C8CFD03BE9DBB8DE7DECA72CC64DB7BB936245B116131E1
32638ECF9C2B2B2AD68D7240575632AF0571242C0A2BDF677AA2DE81E53A218A
B41271EC942A1455D77A0B2061C73655417BBD7BE72B99E82CD4AE381C40ECB6
017F4EEC416B61B5F3AF886A990F118FD694C51021D794C1AFB95D0D8CDFF474
DA198B3FCC51D1FA44E27CFD6782C5055F95C8704EACB14A99ACCA9F6251015C
764B1B7C0F0C93D86FC3427E8C13CF60BE6EFD8AF0B6262FCAAD0E070552403E
FB532CA3AC52DCC9385354C14CD54D8DA97E2E1D8A61A7A9016C4DECEB1494BF
8FFFCBF6FCA07034CF2B1A64BD8E2BBAC1219CFDD43422560F897743CE120648
C37C8D7A67EDDE18731FDE28C5E19B8D4A36539E5E51C330C6BBDD9F4D2A41C0
4A282FDDB29953D37BDEAE3BFD5287194CBC4E417AFE26ECA08AB9F664B48C55
D97EC437192F155AEE8D5ABC5E66BD297F68F54E43E8A671E56B13EA625DA66E
983EEF277727BB31858B64A84528D629DF7F6EB499DBE51FC0648A9CD942C5D1
6D2DFAF0B9A1DBC86375EC9E80DCCCA6A034D49775AE7B77BAAF083C9620C104
E129CC0D6DEEF6DB287CBCCB970C83CD78B1BDC4161B0846BDA9B35D2A37EB90
FAADBD8AA2E4FE10B5BA9CBE6EC0F9FA69AB0B58781B9DDD80D224628B2E5F4F
1DF2A756E8919784B91AF7514AB7CEAA99A534F7EF636F5AFED2D721BCCCA146
9BF40C6EF2CEE016BC7028940D769411066FBA0F839A7C2FA0756FFD2F56CD9C
7FAE3710944EEAD217D951B9BC6678D71B707F8366450D79AD3BDD4E137E816F
044DB7A47109C4E8E7044A8CB83BB53420EA30E78BF666772949ADD815E696AD
1DCA6F92CB2CBA01DD8D9859273164073B8D1881416EAB4ABA84A28C58486757
5C5419BE00D9C4F9E1E7341B8C25D015C50C21A0EC3A6557D9FDA34897142A70
1B218FE90C9C383FF45ED7DF35D4BDF10DFBFE9FE544BB1B993478FD097503C7
8CCF65E4416A616451BF967A9D8F03D5CD95B27C90DA05964F3B91567FE5C812
3671031952F1ACD07F4E10510BA2788CE3305FC8629C42B4B4B50E8AD94C6CF0
5DB509959D96A451B2FB82B9C5F95EAACB6BE1A395B971494B5CE69874D82AA6
F4EB7696ADB2F5B6BD8CFA1B1106D9BE5653AF83C62DB02DC43395EE49A76C81
8FD08A2217C944764331012F44F251B4D4A58AB1FCA08FB46F2B2D0F3FBE91AB
29C21074E1168EFD158AA2B4BC102F76BA9EDDE9E9A2C8A9138A0ABE430A26AF
76717FA75B81BBEF8C055837538AC47A7D2A41E1F10C4F9B4B82E656A6F49D96
AE5F69355718F5CCA23700B476724FF931679E04E259CAAA09DC30D7B8252FE5
90927FE3E83A91D7E1CE66A662BADF76C103ECC2D9A0095A5CF027C1AD3E485B
1EBC1B2F6C2268A237291D9D3E4E2010908C5C2A445F78F01BAC6649A2805562
740D12E936ACF4F26F00C4A2C986D5320DD850DF424BB884C717F7EEF9C6FB07
04911F862B6E7976AE21A12A967A6A30D69FFF82DE13216946E991A8C5C7A131
5BAD1AD34D6275566DB31E9079159B16891906EDAFCF4921214F03427D7E29EE
761A5C8F39DB6D89D4BF6F0BE67E331FD1F515FF079C3CE12C3AE57497A9837F
6FC015AB882EB94A21FB433029A2A141FA8AEEFDCFA4FF87FAAA0B58783C5332
BC98146645E65B8327CA8CBD66DA235C7C250EBCE6DA52E8940D4ABB8FF97500
2F79AACB76ABAE4F73CD6174EC49D5B1F996BF5CDDD665538C4B925817DF56EC
70D6B607B98390985C8FFEA6E71848B87DB4E6D105986E21C3E4D7ED1424EBE1
AD0BB9235F7F30BCDD24B226A21C1064DC8BB4643AF3C47410F0135B9B10F84A
34F54021DE48DD59CD9523112E9E3BC69F35DC6FC2D871B81066BF48B2FB6CFC
CA7D5117586455ED4A2CF1742DC0056D70B2BEFFF164B3956F081D267544A133
973C008B1A10FCEAF7B04DA2E1937DCD182470F700A2C6A68D10A67937715E8A
462B974850B12C45EE50524514F920257C0B0D20BE053C9DEDD24908B7BFE14B
7BBEF3253973E74FF82038A2054DD1642B915BEE2C3153777122DC53DEFBDA8B
698C3AA48A17F4DE717E185DE2BF60868D528F774F65B70851EAF2439169AE92
DFC2A8CCCB7E69BBCA697F9AB1B914E01FBA2834D799C7E9520852145721F2A8
58AA542E2B278FA8CA6339359F326741343D64EAA60B89FEC199BF56948117E5
84CB654DCD4C87C6C19A8916301D7A0C6154C198E0722CDBBF77FAE5979801A8
FCAC8CF9F1C27A21DDF8097CE1E33BA9820F177D84CFAF03EAE9832A0EED49F3
B1D1FDC3E46C22734CCFA7EFACEB0D2C8F89EAFB0AECBF65C64C90933D98EAC0
75E363E93EEBF673401E273E9ACFB003066DF267044635A954688661CCBAED86
D4F3D15FA2207A713C0BF44FF8B5F216E06FA04DA2927BF9DED85DBA90B4F22D
5C052E07B241611D924FACA22EDBBFEAAD01AA8B9639C5E081A70DEE82D9ECF9
AF730CA849B31C8AA8BEA1C36C7A89849B91C6856422EBE3990EC6CAC5AA9233
4F0725680495CAD8E6FB93D8AB0B92C9B36FF353E6EFACD6FE9B0C6D84ECACAF
515136B5435BA9E286549104989BD4531936363DD35ACE8B8452DB008BC66111
846FB8389E4768CE5C0678A6F88FC4C81FC7B27E130B9DD21CA0F2911B36B043
0E972548D79B32B1540EC1C05DEA9849A641173291070157C04144A59B9E95EF
534DB3364D37705C819F0F1336570557830742E0D15672F5CBCBCE9F50F7DDC7
3FA29931265B321BC49CA4B017720BDC0C445341D431007D40068AC69F81383D
8C71F6CEF0A20CF4529CCDAA441F0F7CD4E2E7E112A4AB1113DFF18E891B8F07
B2FDD7C9E30D61220DFC5608F71C2818D71311F93B8AB7AB9D086CCEF40AA8A6
09F1E36E06061AF2789A298EEC7042C12233315A1606371BB56B81D44C68583A
7ED97D02C868D8E2712CF31855DCC50CECD0B24E3A904B1B1CC7BBD302D75F0E
6B5E26E1F97485859DB8EFD1D6234D1F5146E8C67EC198F2ECE798E7F639C8D7
899F4C042A447B3E688DD7E92287F36708A803F22BB76234734D4E31EE257544
ADCAC5503BC67E2A05C9F48FE7EB9BAAD07CA3C985A4CCA9FC3637945CAF1425
5370FA7C6531DE586F184A8ED69DF674679ED5538BD0E547D77E2A195D9890C3
A77C4F5F79902F408D2DB34130E80A46A65F16BF84079B35FF4FC51289A4469D
4B12E6544FC6CBFEB3B4D249241309BEB63A02AF30304EFB574089EDCBD01B0D
0336A98B6E8B46F7278F43B2D6393EACFB82CA958B89391546A9F40E38E6D58D
06DC77AF65F8ED0BC7A2C1008E886419CDE6201E75207C8002BAF8E5BE783778
9D86A06A70E5ABA89A8A93663A4A266F6F768DA3B1A501D5170A9C8EDF64EFD7
A3C9F644274F59ABACB9D13571536458A8564347D43012384A64F7145745D0D6
825EAE1B8EE03833F84746852515077721496D911C8B63F8C02CC493D6E234FF
A78A81E34CA5510D33B5424DD3A93455DEC4BCDB7679B3130F5DDE26A67BDA79
3C47D6F47B974C56F4A3D6FBFD1DC21BDB44DF6CFB4AD0EF5D5E0E6CF523471D
9C0545B6DFDE0DC20B3DFECB6BE1CA57C69652399888E56DAF222C3999DD5C6A
D96EB5A566911685F41E09626461850887226D592E826BCCC2729313AA2E5FDD
AAEA1E34B8FDA79B987546DD52E8B536AC956F7911E63C4BC77EEAF3BA8F3DD0
0EBC4827E27417D6B1DCAE2C964060D5535F05C082EDDA1F692E0897EC590707
73DAB704BED9FD468544F6A7C6B223EB4FC02D804736C5A2A2A58A5FCA55B2CD
1A99710771451CE75D410FF11E5B6D539239360D4C2A5FF4B9FDEE6A31A0A164
B4043231986D5EBAA5591D0E8616D616606948E28B98A2FC9B3581F7A03AEECC
C42DFA9A9A477746B126B5471BB45DC3F23C7E6696BB6E7E3D6A447245FBC077
31774B499DFD1E0FBCE0F9972434F815E3C080BA7EAB11988453C07CC49EAAB0
87098EF7E8404F64A31C886DDD5BFF2C29326B2AF5BEE6EA79BE436051943B3E
05F54D4E76129C436B7EB7A77CCB2C8E81A4E5C7B276FE856982AA2929517EF2
BF26282B9E093DFF53956EFAE19752BEE8A7EAAA36448E0B8CC7680A5C4E6800
FB0DFB1417373162DBB51A6AB832B30313CAA2B9B5FBF69F4FF278B919FBC9D9
B35401579D79175AA3674FB4E8412ADF40CE7C562899140C2A7AA109F371DDEE
1C6A20417E657DBDEC37D7D559F26F46C2A7E60A8ACD18D65F75F989AEA096C8
149621589904D8230F722B5FDD2B4146FB49422E55FCCC44B2B57B82F9784567
7EDA971B829FC0AF273B5DFAB9248334447DBDD36386C4BC5E370B87BDC9DCCD
982E30A22D0BA22856190EB54D855BEF413BD86A9D28E3B35C6D350FCF228123
F8402BCBAA80D2C40789DEE4D803B2C5652FAF4E83A8698BD936B87F340DDCCC
7DED9FB6E4FC14431C38ABF5698245B3E3E8DC80422DEC849581B86D098F63CB
B8A884BCE6829DAB7CB1C2205330170F30E4CEFD11AC83F5654BAD76D50C607D
52D81DBF43F400E348321F726BFBD69137F0933A0BDAB8C1797A50150CBB6CA9
1019FADB83B861D8786F929B9F81F985567F85060FC589CEB86D442F0457C7E6
AAB87EFC28AB9C9AB83A391D360EFF825DE73EBB0C6173A1FE04DFF1837E4A07
A8A5F6496EC035A855CA920288ED9F7B4E062F748C3F881AC8C5FD70569101E0
5AA2B49841EB24F74A124C8320C0D02404B648F4E2D71D2B133A9B77CCE95CE0
205219F150BE3AFE2A938FC58E858EEFFB6CAEB3E074C473DFFA15A76752DDD6
3A05E19650FABC524DCB8F2800470BB439A956BD164511F5542CEE466D47720A
DED91A5C9E33295E1CF6E0710C182EE71D6A1106DF45C257973350489710B1FD
10EEC72F29F36687B724D1D1828C85AB89506CD045BF11384AC2B483B105C56F
747BE1D710C28B182502F5B900807FA3CF5C3C547633DD044459B7C304C9E4E3
F08B9B123F7129A960601BD4F380C5B80481B9B0D12F7ECEE4204C7E6F021CDE
8928B9505BD29DC2D060F35A8CBDE7F9AC6A86591200F38E935B4314D0210D24
1C6669601573979DA17A70419B51CC715A5AFD23080974A1A85FF4F275545D67
E0881444A66D067395DCE8863D8EA93D0347CF9D799568E5CF152B293BEE65A0
FBD4E0EBC426322A4BD34B1576F65EA74CDFD2E9514E8B8452A7310C97B12918
C4F017DCDBD4EE0CEADA81E733423EFB89CCD04B96F68F8FCE606217876BE31D
5C4DA3EFE34E3977329EC3B1B64D8DA71AE7D37B639E124512D331AE1A48A711
FFDF3059DF30C7B9F90A7BEBD38BE3DB213B94C9380F163413250358C86B42CE
D0E49CC620E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (errata.dvi)
@start /Fa 134[50 2[50 1[37 1[39 2[48 53 1[27 2[27 53
2[44 2[53 46 12[66 37[27 46[{}14 83.022 /CMBX10 rf /Fb
134[44 1[60 44 46 32 33 33 1[46 42 46 69 23 44 1[23 46
42 25 37 46 37 46 42 13[46 9[30 62 4[60 1[62 10[42 3[42
42 2[23 1[23 44[{}32 83.022 /CMR10 rf /Fc 133[43 51 3[54
38 1[38 2[49 54 8[43 3[49 13[54 8[50 8[73 8[49 49 4[49
1[49 3[27 44[{}17 99.6264 /CMR12 rf /Fd 134[70 3[73 51
52 51 1[73 66 73 111 36 2[36 73 1[40 58 1[58 73 66 12[96
73 4[99 1[83 6[90 1[96 10[66 1[66 3[66 1[66 48[{}27 143.462
/CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black 1180 739
a Fd(Errata)43 b(for)f(Lecture)i(Notes)1016 922 y(Computabilit)l(y)f
(Theory)f(CS)p 2526 922 40 4 v 48 w(226)1432 1104 y(Len)l(t)i(T)-11
b(erm)42 b(2008)1611 1345 y Fc(An)m(ton)33 b(Setzer)1526
1539 y(Jan)m(uary)g(27,)f(2008)118 1846 y Fb(Here)c(follo)n(ws)f(a)h
(list)h(of)f(errata)f(in)h(the)h(script)f(Computabilit)n(y)-7
b(,)28 b(CS)p 2293 1846 25 4 v 30 w(226.)38 b(All)28
b(mistak)n(es)g(ha)n(v)n(e)f(b)r(een)i(c)n(hanged)118
1946 y(in)f(the)g(lecture)f(notes)h(a)n(v)-5 b(ailable)26
b(on)h(the)h(In)n(ternet.)118 2145 y Fa(There)k(are)h(no)e(errata)i(y)m
(et)g(a)m(v)-5 b(ailable.)p Black 1869 5800 a Fb(1)p
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
